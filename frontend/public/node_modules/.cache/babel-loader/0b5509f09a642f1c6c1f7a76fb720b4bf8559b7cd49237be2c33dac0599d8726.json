{"ast":null,"code":"var _jsxFileName = \"/Users/pottelidharmateja/Desktop/project/personal-finance-management/frontend/src/components/Signup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signup = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState(''); // Updated logic for error messages\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const handleSignup = async e => {\n    e.preventDefault();\n    setErrorMessage(''); // Reset error message before validation\n\n    // Basic field validation\n    if (!email || !password || !confirmPassword) {\n      setErrorMessage('Please fill out all fields.');\n      return;\n    }\n\n    // Validate that passwords match\n    if (password !== confirmPassword) {\n      setErrorMessage('Passwords do not match!');\n      return;\n    }\n    setLoading(true); // Start loading spinner or indicator\n\n    try {\n      const response = await axios.post('http://localhost:5500/api/auth/signup', {\n        email,\n        password\n      });\n\n      // Signup successful\n      alert('Signup successful! Please login.');\n      navigate('/login'); // Redirect to login page after signup\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setErrorMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Signup failed. Please try again.');\n    } finally {\n      setLoading(false); // Stop loading spinner or indicator\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSignup,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 26\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Enter Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Enter Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Confirm Password\",\n        value: confirmPassword,\n        onChange: e => setConfirmPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? 'Signing up...' : 'Signup'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(Signup, \"vDhqBd8kufVgpGqnzhJjk83jVDw=\", false, function () {\n  return [useNavigate];\n});\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","Signup","_s","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","errorMessage","setErrorMessage","loading","setLoading","navigate","handleSignup","e","preventDefault","response","post","alert","error","_error$response","_error$response$data","data","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","disabled","_c","$RefreshReg$"],"sources":["/Users/pottelidharmateja/Desktop/project/personal-finance-management/frontend/src/components/Signup.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\nconst Signup = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState(''); // Updated logic for error messages\n  const [loading, setLoading] = useState(false); \n  const navigate = useNavigate();\n\n  const handleSignup = async (e) => {\n    e.preventDefault();\n    setErrorMessage(''); // Reset error message before validation\n\n    // Basic field validation\n    if (!email || !password || !confirmPassword) {\n      setErrorMessage('Please fill out all fields.');\n      return;\n    }\n\n    // Validate that passwords match\n    if (password !== confirmPassword) {\n      setErrorMessage('Passwords do not match!');\n      return;\n    }\n\n    setLoading(true); // Start loading spinner or indicator\n\n    try {\n      const response = await axios.post('http://localhost:5500/api/auth/signup', {\n        email,\n        password,\n      });\n\n      // Signup successful\n      alert('Signup successful! Please login.');\n      navigate('/login'); // Redirect to login page after signup\n    } catch (error) {\n      setErrorMessage(error.response?.data?.error || 'Signup failed. Please try again.');\n    } finally {\n      setLoading(false); // Stop loading spinner or indicator\n    }\n  };\n\n  return (\n    <div className=\"signup-container\">\n      <form onSubmit={handleSignup}>\n        <h2>Signup</h2>\n        {errorMessage && <p className=\"error-message\">{errorMessage}</p>} {/* Show error */}\n        <input\n          type=\"email\"\n          placeholder=\"Enter Email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          required\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Enter Password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          required\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Confirm Password\"\n          value={confirmPassword}\n          onChange={(e) => setConfirmPassword(e.target.value)}\n          required\n        />\n        <button type=\"submit\" disabled={loading}>\n          {loading ? 'Signing up...' : 'Signup'}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Signup;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}